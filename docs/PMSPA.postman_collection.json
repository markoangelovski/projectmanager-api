{
	"info": {
		"_postman_id": "ebbbf10a-64f8-4392-b86e-e2ce62d30450",
		"name": "PMSPA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/auth",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/auth",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1.1/auth/register",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1.1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/auth/login",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/auth/logout",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Services",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/auth/update?service=add:locale",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"update"
							],
							"query": [
								{
									"key": "user",
									"value": "guest1@guest1.com",
									"disabled": true
								},
								{
									"key": "service",
									"value": "add:locale",
									"description": "add or remove : scan or report or locale"
								},
								{
									"key": "service",
									"value": "remove:locale",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate API Key",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/auth/api-key?services=scan,report,locale",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"api-key"
							],
							"query": [
								{
									"key": "services",
									"value": "scan,report,locale",
									"description": "scan,report,locale"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get existing API Keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/auth/api-key",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"api-key"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete API Keys",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/auth/api-key?key=77539933384595a1932996d589b88a5f50611418b008586e6eeb045e44cb76c4",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"api-key"
							],
							"query": [
								{
									"key": "key",
									"value": "77539933384595a1932996d589b88a5f50611418b008586e6eeb045e44cb76c4"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Locale",
			"item": [
				{
					"name": "Create new Locale",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Service-Key",
								"value": "{{X-Service-Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "project",
									"value": "Herbal Essences",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Herbal Essences it-it",
									"type": "text"
								},
								{
									"key": "url",
									"value": "https://herbalessences.it/",
									"type": "text"
								},
								{
									"key": "SiteTouchpoint",
									"value": "44728",
									"type": "text",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsLocal",
									"value": "UA-5660335-42",
									"type": "text"
								},
								{
									"key": "GoogleAnalyticsBrand",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsReportingView",
									"value": "202117607",
									"type": "text",
									"disabled": true
								},
								{
									"key": "SiteLocalContainer",
									"value": "GTM-KK7GPP2",
									"type": "text",
									"disabled": true
								},
								{
									"key": "ConsentOverlayID",
									"value": "0a909d70-dc26-4693-9127-8d2a9876509e.js",
									"type": "text"
								},
								{
									"key": "FacebookRemarketingID",
									"value": "897572113963970",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Segment",
									"value": "OXJSsZEnH9NJhBMFZOYqiCb6roqcbs1k",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Lytics",
									"value": "3818e692efb3bdd462eb2a3b03baddf3",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/locale",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"locale"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Locales",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Service-Key",
								"value": "{{X-Service-Key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/locale?globalGTM=GTM-PW4NS3V",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"locale"
							],
							"query": [
								{
									"key": "url",
									"value": "https://herbalessences.com/en-us",
									"disabled": true
								},
								{
									"key": "project",
									"value": "Gillette Venus",
									"disabled": true
								},
								{
									"key": "title",
									"value": "Herbal Essences en_us",
									"disabled": true
								},
								{
									"key": "SiteTouchpoint",
									"value": "33121",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsLocal",
									"value": "UA-5660335-33",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsReportingView",
									"value": "179993906",
									"disabled": true
								},
								{
									"key": "SiteLocalContainer",
									"value": "GTM-MQB8VWK",
									"disabled": true
								},
								{
									"key": "ConsentOverlayID",
									"value": "e01736f1-f96b-40b5-a429-b9da6467b248",
									"disabled": true
								},
								{
									"key": "FacebookRemarketingID",
									"value": "897572113963970",
									"disabled": true
								},
								{
									"key": "Lytics",
									"value": "2cae79a7e22f8be74a4a187800aa9c62",
									"disabled": true
								},
								{
									"key": "globalGTM",
									"value": "GTM-PW4NS3V",
									"description": "GTM-N94XXFB or GTM-PW4NS3V"
								},
								{
									"key": "GTM.SitePrivacyProtection",
									"value": "CCPA",
									"disabled": true
								},
								{
									"key": "GTM.SiteCountry",
									"value": "CA",
									"disabled": true
								},
								{
									"key": "GTM.GoogleAnalyticsBrand",
									"value": "UA-8645532-42",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Locale",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Service-Key",
								"value": "{{X-Service-Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "url",
									"value": "https://www.homemadesimple.com/",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Align en_ca",
									"type": "text",
									"disabled": true
								},
								{
									"key": "SiteTouchpoint",
									"value": "44683",
									"type": "text",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsLocal",
									"value": "UA-5660335-33",
									"type": "text",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsBrand",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "GoogleAnalyticsReportingView",
									"value": "221576360",
									"type": "text",
									"disabled": true
								},
								{
									"key": "SiteLocalContainer",
									"value": "GTM-PZD585R",
									"type": "text",
									"disabled": true
								},
								{
									"key": "ConsentOverlayID",
									"value": "14fbed57-90d3-47f5-b7e3-22183a43f987",
									"type": "text",
									"disabled": true
								},
								{
									"key": "FacebookRemarketingID",
									"value": "212682460080208",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Segment",
									"value": " ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Lytics",
									"value": "3818e692efb3bdd462eb2a3b03baddf3",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/locale",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"locale"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Scan",
			"item": [
				{
					"name": "Fetch Scans",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec6ad06c-d355-4521-b5d5-c50cadfc192c",
								"exec": [
									"var template = `",
									"   <table bgcolor=\"#FFFFFF\">",
									"        <tr>",
									"            <th>Date</th>",
									"            <th>Duration</th>",
									"        </tr>",
									"",
									"        {{#each response.scans}}",
									"            <tr>",
									"                <td>{{createdAt}}</td>",
									"                <td>{{scanDurationMs}}</td>",
									"            </tr>",
									"        {{/each}}",
									"    </table>",
									"`;",
									"",
									"// Set visualizer",
									"pm.visualizer.set(template, {",
									"    // Pass the response body parsed as JSON as `data`",
									"    response: pm.response.json()",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Service-Key",
								"value": "{{X-Service-Key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/scan?start=2020-01-01&end=2021-01-01",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"scan"
							],
							"query": [
								{
									"key": "start",
									"value": "2020-01-01"
								},
								{
									"key": "end",
									"value": "2021-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Scan single Locale",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Service-Key",
								"value": "{{X-Service-Key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/scan?url=https://herbalessences.com/en-us",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"scan"
							],
							"query": [
								{
									"key": "url",
									"value": "https://herbalessences.com/en-us"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Scan all Locales",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Service-Key",
								"type": "text",
								"value": "{{X-Service-Key}}"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/scan",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"scan"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Report",
			"item": [
				{
					"name": "Create new Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Service-Key",
								"value": "{{X-Service-Key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/report?type=locale",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"report"
							],
							"query": [
								{
									"key": "format",
									"value": "csv",
									"description": "csv or xlsx",
									"disabled": true
								},
								{
									"key": "format",
									"value": "xlsx",
									"description": "csv or xlsx",
									"disabled": true
								},
								{
									"key": "type",
									"value": "scan",
									"description": "locale or scan",
									"disabled": true
								},
								{
									"key": "start",
									"value": "2020-01-01",
									"description": "start period date",
									"disabled": true
								},
								{
									"key": "end",
									"value": "2021-01-01",
									"description": "end period date",
									"disabled": true
								},
								{
									"key": "type",
									"value": "locale",
									"description": "locale or scan"
								},
								{
									"key": "keys",
									"value": "ConsentOverlay,ConsentOverlayID,SitePrivacyProtection,SiteGDPR",
									"description": "SiteTouchpoint,SiteLocalContainer...",
									"disabled": true
								},
								{
									"key": "projects",
									"value": "Metamucil",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Create new Project",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "",
									"description": "Project title",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "Project description",
									"type": "text"
								},
								{
									"key": "pl",
									"value": "",
									"description": "Program Lead name",
									"type": "text"
								},
								{
									"key": "kanboard",
									"value": "",
									"description": "Kandboard link",
									"type": "text"
								},
								{
									"key": "dev",
									"value": "",
									"description": "Development link",
									"type": "text"
								},
								{
									"key": "stage",
									"value": "",
									"description": "Staging link",
									"type": "text"
								},
								{
									"key": "prod",
									"value": "",
									"description": "Production link",
									"type": "text"
								},
								{
									"key": "live",
									"value": "",
									"description": "Live link",
									"type": "text"
								},
								{
									"key": "nas",
									"value": "",
									"description": "NAS path",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/projects",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch single Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/projects/:projectId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"projects",
								":projectId"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "projectId",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/projects?limit=&skip=&sort=",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"description": "Limit, ex. 5. Default: 10, max 10."
								},
								{
									"key": "skip",
									"value": "",
									"description": "Offset, ex. 10. Default: 0."
								},
								{
									"key": "sort",
									"value": "",
									"description": "+/- prefixed, comma separated sort options, ex. title,-date. Dfault: title"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"propName\": \"title\",\n        \"propValue\": \"Updated title\"\n    },\n    {\n        \"propName\": \"description\",\n        \"propValue\": \"Updated Description\"\n    },\n    {\n        \"propName\": \"done\",\n        \"propValue\": \"true\"\n    },\n    {\n        \"propName\": \"pl\",\n        \"propValue\": \"Updated PL\"\n    },\n    {\n        \"propName\": \"kanboard\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"dev\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"stage\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"prod\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"live\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"nas\",\n        \"propValue\": \"\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/projects/:projectId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"projects",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "",
									"type": "string",
									"description": "Project ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/projects/:projectId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"projects",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Create new Task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "",
									"description": "Task title",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "Task description",
									"type": "text"
								},
								{
									"key": "column",
									"value": "",
									"description": "Column: Upcoming, In Progress or Completed",
									"type": "text"
								},
								{
									"key": "pl",
									"value": "",
									"description": "Program Lead name",
									"type": "text"
								},
								{
									"key": "kanboard",
									"value": "",
									"description": "Kandboard link",
									"type": "text"
								},
								{
									"key": "nas",
									"value": "",
									"description": "NAS path",
									"type": "text"
								},
								{
									"key": "dueDate",
									"value": "",
									"description": "Due date YYYY-MM-DD",
									"type": "text"
								},
								{
									"key": "project",
									"value": "",
									"description": "Project ID",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/tasks",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch single Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/tasks?task=",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"tasks"
							],
							"query": [
								{
									"key": "task",
									"value": "",
									"description": "Task ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Tasks by Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/tasks?project=",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"tasks"
							],
							"query": [
								{
									"key": "project",
									"value": "",
									"description": "Project ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/tasks?limit=&skip=&sort=",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"tasks"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"description": "Limit, ex. 5. Default: 10, max 10."
								},
								{
									"key": "skip",
									"value": "",
									"description": "Offset, ex. 10. Default: 0."
								},
								{
									"key": "sort",
									"value": "",
									"description": "+/- prefixed, comma separated sort options, ex. title,-date. Dfault: title"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"propName\": \"title\",\n        \"propValue\": \"Updated Title\"\n    },\n    {\n        \"propName\": \"description\",\n        \"propValue\": \"Updated Description\"\n    },\n    {\n        \"propName\": \"done\",\n        \"propValue\": \"false\"\n    },\n    {\n        \"propName\": \"column\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"pl\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"kanboard\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"nas\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"dueDate\",\n        \"propValue\": \"\"\n    },\n    {\n        \"propName\": \"project\",\n        \"propValue\": \"\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/tasks/:taskId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/tasks/:taskId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Note",
			"item": [
				{
					"name": "Fetch Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/notes?limit=&skip=&sort=",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"notes"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"description": "Limit, ex. 5. Default: 10, max 10."
								},
								{
									"key": "skip",
									"value": "",
									"description": "Offset, ex. 10. Default: 0."
								},
								{
									"key": "sort",
									"value": "",
									"description": "+/- prefixed, comma separated sort options, ex. title,-date. Dfault: title"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Notes by Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/notes?task",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"notes"
							],
							"query": [
								{
									"key": "task",
									"value": null,
									"description": "Task ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Notes Copy Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1.1/notes",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1.1",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Note",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "note",
									"value": "New note text",
									"description": "Note text",
									"type": "text"
								},
								{
									"key": "task",
									"value": "5efa439c2e622100043259ef",
									"description": "Task ID",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/notes",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Note",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"Updated Note\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/notes/:noteId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"notes",
								":noteId"
							],
							"variable": [
								{
									"key": "noteId",
									"value": "",
									"type": "string",
									"description": "Note ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Note",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/notes/:noteId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"notes",
								":noteId"
							],
							"variable": [
								{
									"key": "noteId",
									"value": "",
									"type": "string",
									"description": "Note ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Event",
			"item": [
				{
					"name": "Create new Event",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "day",
									"value": "2020-06-24",
									"description": "Date format YYYY-MM-DD",
									"type": "text"
								},
								{
									"key": "task",
									"value": "",
									"description": "Task id if available",
									"type": "text"
								},
								{
									"key": "title",
									"value": "New event title",
									"description": "New event title",
									"type": "text"
								},
								{
									"key": "duration",
									"value": "0.25",
									"description": "Event duration",
									"type": "text"
								},
								{
									"key": "start",
									"value": "7",
									"description": "Day start time",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/days/event.create",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"event.create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch Events",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/days/event.find?start=2020-06-24",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"event.find"
							],
							"query": [
								{
									"key": "start",
									"value": "2020-06-24",
									"description": "Start date for Day range query or single Day date"
								},
								{
									"key": "end",
									"value": "2021-06-25",
									"description": "End date for Day range query",
									"disabled": true
								},
								{
									"key": "id",
									"value": "5ef12d94e4590d0e5d58dae4",
									"description": "Get Day by id",
									"disabled": true
								},
								{
									"key": "task",
									"value": "5de087f5f6be4e686a9d9621",
									"description": "Get Events bx task id",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Event",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"propName\": \"title\",\n        \"propValue\": \"Updated title\"\n    },\n    {\n        \"propName\": \"booked\",\n        \"propValue\": \"false\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/days/event.update/:eventId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"event.update",
								":eventId"
							],
							"variable": [
								{
									"key": "eventId",
									"value": "5ef13babe4590d0e5d58daf7",
									"type": "string",
									"description": "Event id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Event",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"propName\": \"title\",\n        \"propValue\": \"Updated title\"\n    },\n    {\n        \"propName\": \"booked\",\n        \"propValue\": \"true\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/days/event.delete/:dayId/:eventId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"event.delete",
								":dayId",
								":eventId"
							],
							"variable": [
								{
									"key": "dayId",
									"value": "",
									"type": "string",
									"description": "Day id"
								},
								{
									"key": "eventId",
									"value": "",
									"type": "string",
									"description": "Event id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Log",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "event",
									"value": "5ef13babe4590d0e5d58daf7",
									"description": "eventId",
									"type": "text"
								},
								{
									"key": "title",
									"value": "New event title",
									"description": "New Log title",
									"type": "text"
								},
								{
									"key": "duration",
									"value": "0.25",
									"description": "Log duration",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/days/log.create",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"log.create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Log",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"propName\": \"title\",\n        \"propValue\": \"Updated title\"\n    },\n    {\n        \"propName\": \"duration\",\n        \"propValue\": \"0.75\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/days/log.update/:logId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"log.update",
								":logId"
							],
							"variable": [
								{
									"key": "logId",
									"value": "5ef38e3b8a230316a966fbe8",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Log",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/days/log.delete/:logId",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"days",
								"log.delete",
								":logId"
							],
							"variable": [
								{
									"key": "logId",
									"value": "5ef38e3b8a230316a966fbe8",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Stats",
			"item": [
				{
					"name": "Get booking stats by Day",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/stats/day?start=2020-01-01&end=2020-07-30&total=true",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"stats",
								"day"
							],
							"query": [
								{
									"key": "start",
									"value": "2020-01-01",
									"description": "Start date"
								},
								{
									"key": "end",
									"value": "2020-07-30",
									"description": "End date"
								},
								{
									"key": "total",
									"value": "true",
									"description": "true or false, returns total events/logs and hours worked/booked"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get booking stats by Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/stats/task?start=2020-01-01&end=2020-07-30&id=5de087f5f6be4e686a9d9621",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"stats",
								"task"
							],
							"query": [
								{
									"key": "start",
									"value": "2020-01-01",
									"description": "Start date"
								},
								{
									"key": "end",
									"value": "2020-07-30",
									"description": "End date"
								},
								{
									"key": "id",
									"value": "5de087f5f6be4e686a9d9621",
									"description": "Task id"
								},
								{
									"key": "total",
									"value": "true",
									"description": "true or false, returns total events/logs and hours worked/booked",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tasks stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/stats/tasks?done=false",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"stats",
								"tasks"
							],
							"query": [
								{
									"key": "skip",
									"value": "20",
									"description": "Number of documents to skip, increments of 20",
									"disabled": true
								},
								{
									"key": "done",
									"value": "false",
									"description": "Fetch done tasks, true or false, nothing for all tasks"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Docs",
			"item": [
				{
					"name": "Get Postman Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/v1/docs",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"docs"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3c5e8355-ea73-4719-abef-4986badc0a63",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "76e21d1e-ad5b-43ab-9e99-d1d8d77860ce",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c9c686b4-8693-44c9-8581-ad9c781a1de2",
			"key": "email",
			"value": ""
		},
		{
			"id": "3fd75bdd-400d-4ad2-a1be-c9016d0999e5",
			"key": "password",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}